// Code generated by protoc-gen-go. DO NOT EDIT.
// source: token-info.proto

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	token-info.proto

It has these top-level messages:
	VerifyRequest
	VerifyResponse
*/
package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto1.ProtoPackageIsVersion2 // please upgrade the proto package

type VerifyRequest struct {
	Token  string   `protobuf:"bytes,1,opt,name=token" json:"token,omitempty"`
	Params []string `protobuf:"bytes,2,rep,name=params" json:"params,omitempty"`
}

func (m *VerifyRequest) Reset()                    { *m = VerifyRequest{} }
func (m *VerifyRequest) String() string            { return proto1.CompactTextString(m) }
func (*VerifyRequest) ProtoMessage()               {}
func (*VerifyRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *VerifyRequest) GetToken() string {
	if m != nil {
		return m.Token
	}
	return ""
}

func (m *VerifyRequest) GetParams() []string {
	if m != nil {
		return m.Params
	}
	return nil
}

type VerifyResponse struct {
	Success bool  `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Status  int32 `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
}

func (m *VerifyResponse) Reset()                    { *m = VerifyResponse{} }
func (m *VerifyResponse) String() string            { return proto1.CompactTextString(m) }
func (*VerifyResponse) ProtoMessage()               {}
func (*VerifyResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *VerifyResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *VerifyResponse) GetStatus() int32 {
	if m != nil {
		return m.Status
	}
	return 0
}

func init() {
	proto1.RegisterType((*VerifyRequest)(nil), "proto.VerifyRequest")
	proto1.RegisterType((*VerifyResponse)(nil), "proto.VerifyResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for TokenInfo service

type TokenInfoClient interface {
	VerifyToken(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error)
}

type tokenInfoClient struct {
	cc *grpc.ClientConn
}

func NewTokenInfoClient(cc *grpc.ClientConn) TokenInfoClient {
	return &tokenInfoClient{cc}
}

func (c *tokenInfoClient) VerifyToken(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*VerifyResponse, error) {
	out := new(VerifyResponse)
	err := grpc.Invoke(ctx, "/proto.TokenInfo/VerifyToken", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for TokenInfo service

type TokenInfoServer interface {
	VerifyToken(context.Context, *VerifyRequest) (*VerifyResponse, error)
}

func RegisterTokenInfoServer(s *grpc.Server, srv TokenInfoServer) {
	s.RegisterService(&_TokenInfo_serviceDesc, srv)
}

func _TokenInfo_VerifyToken_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(TokenInfoServer).VerifyToken(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.TokenInfo/VerifyToken",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(TokenInfoServer).VerifyToken(ctx, req.(*VerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _TokenInfo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.TokenInfo",
	HandlerType: (*TokenInfoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "VerifyToken",
			Handler:    _TokenInfo_VerifyToken_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "token-info.proto",
}

func init() { proto1.RegisterFile("token-info.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 178 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x28, 0xc9, 0xcf, 0x4e,
	0xcd, 0xd3, 0xcd, 0xcc, 0x4b, 0xcb, 0xd7, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53,
	0x4a, 0xb6, 0x5c, 0xbc, 0x61, 0xa9, 0x45, 0x99, 0x69, 0x95, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5,
	0x25, 0x42, 0x22, 0x5c, 0xac, 0x60, 0xb5, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x10, 0x8e,
	0x90, 0x18, 0x17, 0x5b, 0x41, 0x62, 0x51, 0x62, 0x6e, 0xb1, 0x04, 0x93, 0x02, 0xb3, 0x06, 0x67,
	0x10, 0x94, 0xa7, 0xe4, 0xc4, 0xc5, 0x07, 0xd3, 0x5e, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x24,
	0xc1, 0xc5, 0x5e, 0x5c, 0x9a, 0x9c, 0x9c, 0x5a, 0x5c, 0x0c, 0x36, 0x81, 0x23, 0x08, 0xc6, 0x05,
	0x99, 0x51, 0x5c, 0x92, 0x58, 0x52, 0x0a, 0x32, 0x83, 0x51, 0x83, 0x35, 0x08, 0xca, 0x33, 0x72,
	0xe7, 0xe2, 0x0c, 0x01, 0x59, 0xe2, 0x99, 0x97, 0x96, 0x2f, 0x64, 0xc5, 0xc5, 0x0d, 0x31, 0x10,
	0x2c, 0x24, 0x24, 0x02, 0x71, 0xad, 0x1e, 0x8a, 0x1b, 0xa5, 0x44, 0xd1, 0x44, 0x21, 0x56, 0x27,
	0xb1, 0x81, 0x45, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x44, 0xc5, 0xe0, 0x91, 0xed, 0x00,
	0x00, 0x00,
}
